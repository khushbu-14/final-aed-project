/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import userinterface.SystemAdminWorkArea.*;
import Business.EcoSystem;
import Business.Staff.Sessions;
import Business.Staff.SessionsMedStaff;
import Business.User.User;
import Business.User.UserDirectory;
import Business.UserAccount.UserAccount;
import constants.Utils;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static userinterface.CustomerRole.SelectConsultationPanel.now;
import userinterface.StaffRole.AddHospStaffSessionsPanel;

/**
 *
 * @author khushbu
 */
public class ManageUserConsultationHistoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserPanel
     */
    UserDirectory userDirectory;
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    Utils utils;
    DateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
    Date date;

    public ManageUserConsultationHistoryPanel(JPanel parentContainerPanel, EcoSystem ecosystem, UserAccount userAccount) {
        this.userProcessContainer = parentContainerPanel;
        this.ecosystem = ecosystem;
        utils = new Utils();
        this.userAccount = userAccount;
        initComponents();
        date = new Date();
        
        try {
            //DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM/dd/YYYY");
            date = formatter.parse(formatter.format(date));
        } catch (ParseException ex) {
            Logger.getLogger(AddHospStaffSessionsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSession = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnViewDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(244, 249, 249));

        tblSession.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tblSession.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sr No", "Session Name", "Date", "Start-time", "End-time", "Session Type", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSession.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblSession.setSelectionBackground(new java.awt.Color(0, 102, 204));
        jScrollPane1.setViewportView(tblSession);

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText(" Manage Past Consultations");

        btnViewDetails.setBackground(new java.awt.Color(255, 255, 255));
        btnViewDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/view-details.png"))); // NOI18N
        btnViewDetails.setText("View Details");
        btnViewDetails.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 255, 255), 1, true));
        btnViewDetails.setBorderPainted(false);
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(405, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

     private int getSelectedRow() {
        int selectedRowIndex = tblSession.getSelectedRow();
        return selectedRowIndex;
    }

    private SessionsMedStaff getSelectedSession() {
        int selectedRowIndex = tblSession.getSelectedRow();

        if (selectedRowIndex < 0) {
            utils.showErrorToast("Oops! Please select a User first.");
            return null;
        }

        SessionsMedStaff u = (SessionsMedStaff) tblSession.getValueAt(selectedRowIndex, 1);

        return u;
    }
    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        SessionsMedStaff sess = getSelectedSession();
        if (sess != null ) {
            //UserReport userReportPanel = new UserReport(mainWorkArea, userAccount, ecosystem, user);
            consultationHistory viewSessionDetailsPanel = new consultationHistory(userProcessContainer, userAccount, ecosystem, sess );
            userProcessContainer.add("userReportPanel", viewSessionDetailsPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed


    public void refreshTable() {
        populateTable();
    }

    private void populateTable() {
        User user = ecosystem.getUserDirectory().getUserByUserName(userAccount.getUsername());
        ArrayList<SessionsMedStaff> sessList = user.getConsultationSessions().getSession();
        if (sessList != null) {
            DefaultTableModel model = (DefaultTableModel) tblSession.getModel();

            model.setRowCount(0);
            int count = 1;

            for (SessionsMedStaff s : sessList) {
                if(!s.getStatus().equalsIgnoreCase("new")){
                Object[] row = new Object[7];
                row[0] = "" + count++;
                row[1] = s;
                row[2] = s.getSessionDate();
                row[3] = s.getStartTime();
                row[4] = s.getEndTime();
                row[5] = s.getIsRemote();
                row[6] = s.getStatus();

                model.addRow(row);
                }
                
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblSession;
    // End of variables declaration//GEN-END:variables
}
